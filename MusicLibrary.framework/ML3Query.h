/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class ML3Predicate, ML3QueryLoadOperation, NSMutableIndexSet, NSLock, ML3AggregateQuery, NSString, ML3MusicLibrary, NSArray;

@interface ML3Query : NSObject <NSFastEnumeration, NSCoding> {
    ML3MusicLibrary *_library;
    Class _entityClass;
    ML3Predicate *_predicate;
    NSArray *_orderingProperties;
    BOOL _usingSections;
    NSLock *_loadedArrayLock;
    unsigned int _loadedArrayCapacity;
    NSMutableIndexSet *_loadedArrayIndexSet;
    long long *_loadedPersistentIDArray;
    NSMutableIndexSet *_loadedAggregateCountArray;
    unsigned int *_loadedAggregatedCountArray;
    BOOL _hasLoadedEveryPersistentID;
    ML3AggregateQuery *_nonDirectAggregateQuery;
}

@property(readonly) BOOL hasEntities;
@property(readonly) unsigned int countOfEntitiesNoLoad;
@property(readonly) unsigned int countOfEntities;
@property(readonly) NSString * sectionProperty;
@property(retain,readonly) NSArray * sections;
@property(readonly) ML3QueryLoadOperation * loadEntitiesOperation;
@property(readonly) ML3AggregateQuery * nonDirectAggregateQuery;
@property BOOL hasLoadedEveryPersistentID;
@property(readonly) BOOL usingSections;
@property(readonly) ML3MusicLibrary * library;
@property(readonly) NSArray * orderingProperties;
@property(readonly) ML3Predicate * predicate;
@property(readonly) Class entityClass;


- (BOOL)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (unsigned int)countByEnumeratingWithState:(struct { unsigned long x1; id *x2; unsigned long *x3; unsigned long x4[5]; }*)arg1 objects:(id*)arg2 count:(unsigned int)arg3;
- (BOOL)hasEntities;
- (void)enumeratePersistentIDsAndProperties:(id)arg1 countedProperties:(id)arg2 ordered:(BOOL)arg3 cancelBlock:(id)arg4 usingBlock:(id)arg5;
- (Class)entityClass;
- (void)enumerateSectionsUsingBlock:(id)arg1;
- (void)enumeratePersistentIDsAndProperties:(id)arg1 countedProperties:(id)arg2 usingBlock:(id)arg3;
- (id)valueForAggregateFunction:(id)arg1 onEntitiesForProperty:(id)arg2;
- (id)library;
- (id)sections;
- (id)selectSQLWithColumns:(id)arg1 orderingProperties:(id)arg2;
- (id)selectPersistentIDsSQL;
- (void)bindToPersistentIDsSqlite3Statement:(struct sqlite3_stmt { }*)arg1 bindingIndex:(inout int*)arg2;
- (BOOL)getPersistentID:(long long*)arg1 atIndex:(unsigned int)arg2;
- (id)selectPersistentIDsSQLAndProperties:(id)arg1 ordered:(BOOL)arg2;
- (unsigned int)countOfEntitiesNoLoad;
- (id)initWithLibrary:(id)arg1 entityClass:(Class)arg2 predicate:(id)arg3 orderingProperties:(id)arg4 usingSections:(BOOL)arg5 nonDirectAggregateQuery:(id)arg6;
- (unsigned int)countOfEntities;
- (void)loadAllEntities;
- (BOOL)hasLoadedEntityAtIndex:(unsigned int)arg1;
- (BOOL)hasLoadedEntitesInRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (void)loadEntityAtIndex:(unsigned int)arg1;
- (void)loadAggregateCountForEntityAtIndex:(unsigned int)arg1;
- (void)visitGroupMembersOfEntityAtIndex:(unsigned int)arg1 visitor:(int (*)())arg2 context:(void*)arg3;
- (BOOL)getAggregatedCount:(unsigned int*)arg1 atIndex:(unsigned int)arg2;
- (id)entityAtIndex:(unsigned int)arg1;
- (id)loadEntitiesOperation;
- (id)loadEntitiesOperationForRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (id)loadEntitiesOperationForRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1 ordered:(BOOL)arg2;
- (id)loadEntitiesOperationForRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1 ordered:(BOOL)arg2 properties:(id)arg3 block:(id)arg4;
- (id)persistentIDProperty;
- (BOOL)distinctPersistentIDProperty;
- (unsigned int)indexOfEntity:(id)arg1;
- (unsigned int)indexOfPersistentID:(long long)arg1;
- (void)enumeratePersistentIDsAndProperties:(id)arg1 countedProperties:(id)arg2 ordered:(BOOL)arg3 usingBlock:(id)arg4;
- (id)selectSQLWithColumns:(id)arg1 groupBy:(id)arg2;
- (id)selectSQLWithColumns:(id)arg1 orderingProperties:(id)arg2 directionality:(id)arg3;
- (id)selectSQLWithColumns:(id)arg1 groupBy:(id)arg2 orderingProperties:(id)arg3;
- (id)selectSQLWithColumns:(id)arg1 groupBy:(id)arg2 orderingProperties:(id)arg3 directionality:(id)arg4;
- (id)selectSectionsSQL;
- (void)bindToSectionsSqlite3Statement:(struct sqlite3_stmt { }*)arg1 bindingIndex:(inout int*)arg2;
- (id)selectUnorderedPersistentIDsSQL;
- (id)selectCountSQL;
- (void)bindToCountSqlite3Statement:(struct sqlite3_stmt { }*)arg1 bindingIndex:(inout int*)arg2;
- (id)sectionProperty;
- (void)growLoadedArraysForIndex:(unsigned int)arg1;
- (void)insertLoadedAggregatedCount:(unsigned int)arg1 atIndex:(unsigned int)arg2;
- (void)insertLoadedPersistentID:(long long)arg1 atIndex:(unsigned int)arg2;
- (void)loadedAllPersisentIDs;
- (BOOL)hasLoadedEveryPersistentID;
- (void)setHasLoadedEveryPersistentID:(BOOL)arg1;
- (id)orderingProperties;
- (id)nonDirectAggregateQuery;
- (BOOL)usingSections;
- (void)enumeratePersistentIDsUsingBlock:(id)arg1;
- (void)enumeratePersistentIDsAndProperties:(id)arg1 usingBlock:(id)arg2;
- (id)predicate;

@end
