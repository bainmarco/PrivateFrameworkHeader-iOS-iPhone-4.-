/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class CALayer;

@interface WebGLLayer : CAEAGLLayer  {
    struct GraphicsLayer { int (**x1)(); struct GraphicsLayerClient {} *x2; struct String { 
            struct RefPtr<WebCore::StringImpl> { 
                struct StringImpl {} *m_ptr; 
            } m_impl; 
        } x3; struct IntSize { 
            int m_width; 
            int m_height; 
        } x4; struct FloatPoint { 
            float m_x; 
            float m_y; 
        } x5; struct FloatPoint3D { 
            float m_x; 
            float m_y; 
            float m_z; 
        } x6; struct FloatSize { 
            float m_width; 
            float m_height; 
        } x7; struct TransformationMatrix { 
            double m_matrix[4][4]; 
        } x8; struct TransformationMatrix { 
            double m_matrix[4][4]; 
        } x9; struct Color { 
            unsigned int m_color; 
            boolm_valid; 
        } x10; float x11; float x12; unsigned int x13 : 1; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; int x20; int x21; int x22; struct Vector<WebCore::GraphicsLayer*,0ul> { 
            unsigned int m_size; 
            struct VectorBuffer<WebCore::GraphicsLayer*,0ul> { 
                struct GraphicsLayer {} **m_buffer; 
                unsigned int m_capacity; 
            } m_buffer; 
        } x23; struct GraphicsLayer {} *x24; struct GraphicsLayer {} *x25; struct GraphicsLayer {} *x26; struct GraphicsLayer {} *x27; struct FloatPoint { 
            float m_x; 
            float m_y; 
        } x28; struct IntRect { 
            struct IntPoint { 
                int m_x; 
                int m_y; 
            } m_location; 
            struct IntSize { 
                int m_width; 
                int m_height; 
            } m_size; 
        } x29; int x30; } *m_layerOwner;

  /* Error parsing encoded ivar type info: ^{GraphicsContext3D=^^?ii{Attributes="alpha"B"depth"B"stencil"B"antialias"B"premultipliedAlpha"B}{Vector<WTF::Vector<float, 0ul>,0ul>="m_size"I"m_buffer"{VectorBuffer<WTF::Vector<float, 0ul>,0ul>="m_buffer"^{Vector<float,0ul>}"m_capacity"I}}@"EAGLContext"{RetainPtr<CALayer>="m_ptr"@"CALayer"}IIIIIII{ListHashSet<long unsigned int,256ul,WTF::IntHash<long unsigned int> >="m_impl"{HashTable<WTF::ListHashSetNode<long unsigned int, 256ul>*,WTF::ListHashSetNode<long unsigned int, 256ul>*,WTF::IdentityExtractor<WTF::ListHashSetNode<long unsigned int, 256ul>*>,WTF::ListHashSetNodeHashFunctions<long unsigned int, 256ul, WTF::IntHash<long unsigned int> >,WTF::HashTraits<WTF::ListHashSetNode<long unsigned int, 256ul>*>,WTF::HashTraits<WTF::ListHashSetNode<long unsigned int, 256ul>*> >="m_table"^^{ListHashSetNode<long unsigned int,256ul>}"m_tableSize"i"m_tableSizeMask"i"m_keyCount"i"m_deletedCount"i}"m_head"^{ListHashSetNode<long unsigned int,256ul>}"m_tail"^{ListHashSetNode<long unsigned int,256ul>}"m_allocator"{OwnPtr<WTF::ListHashSetNodeAllocator<long unsigned int, 256ul> >="m_ptr"^{ListHashSetNodeAllocator<long unsigned int,256ul>}}}} */
    struct GraphicsContext3D { int (**x1)(); int x2; int x3; struct Attributes { 
            boolalpha; 
            booldepth; 
            boolstencil; 
            boolantialias; 
            boolpremultipliedAlpha; 
        } x4; struct Vector<WTF::Vector<float, 0ul>,0ul> { 
            unsigned int m_size; 
            struct VectorBuffer<WTF::Vector<float, 0ul>,0ul> { 
                struct Vector<float,0ul> {} *m_buffer; 
                unsigned int m_capacity; 
            } m_buffer; 
        } x5; id x6; /* Warning: Unrecognized filer type: '"' using 'void*' */ void*x7; void*x8; void*x9; void*x10; unsigned long x11; unsigned char x12; out in void*x13; void*x14; void*x15; void*x16; void*x17; struct RetainPtr<CALayer> { 
            CALayer *m_ptr; 
        } x18; unsigned int x19; unsigned int x20; unsigned int x21; unsigned int x22; unsigned int x23; unsigned int x24; unsigned int x25; struct ListHashSet<long unsigned int,256ul,WTF::IntHash<long unsigned int> > { 
            struct HashTable<WTF::ListHashSetNode<long unsigned int, 256ul>*,WTF::ListHashSetNode<long unsigned int, 256ul>*,WTF::IdentityExtractor<WTF::ListHashSetNode<long unsigned int, 256ul>*>,WTF::ListHashSetNodeHashFunctions<long unsigned int, 256ul, WTF::IntHash<long unsigned int> >,WTF::HashTraits<WTF::ListHashSetNode<long unsigned int, 256ul>*>,WTF::HashTraits<WTF::ListHashSetNode<long unsigned int, 256ul>*> > { 
                struct ListHashSetNode<long unsigned int,256ul> {} **m_table; 
                int m_tableSize; 
                int m_tableSizeMask; 
                int m_keyCount; 
                int m_deletedCount; 
            } m_impl; 
            struct ListHashSetNode<long unsigned int,256ul> {} *m_head; 
            struct ListHashSetNode<long unsigned int,256ul> {} *m_tail; 
            struct OwnPtr<WTF::ListHashSetNodeAllocator<long unsigned int, 256ul> > { 
                struct ListHashSetNodeAllocator<long unsigned int,256ul> {} *m_ptr; 
            } m_allocator; 
        } x26; } *m_context;

}


- (struct CGImage { }*)copyImageSnapshotWithColorSpace:(struct CGColorSpace { }*)arg1;
- (id)initWithGraphicsContext3D:(struct GraphicsContext3D { int (**x1)(); int x2; int x3; struct Attributes { boolx_4_1_1; boolx_4_1_2; boolx_4_1_3; boolx_4_1_4; boolx_4_1_5; } x4; struct Vector<WTF::Vector<float, 0ul>,0ul> { unsigned int x_5_1_1; struct VectorBuffer<WTF::Vector<float, 0ul>,0ul> { struct Vector<float,0ul> {} *x_2_2_1; unsigned int x_2_2_2; } x_5_1_2; } x5; id x6; struct RetainPtr<CALayer> { id x_7_1_1; } x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; struct ListHashSet<long unsigned int,256ul,WTF::IntHash<long unsigned int> > { struct HashTable<WTF::ListHashSetNode<long unsigned int, 256ul>*,WTF::ListHashSetNode<long unsigned int, 256ul>*,WTF::IdentityExtractor<WTF::ListHashSetNode<long unsigned int, 256ul>*>,WTF::ListHashSetNodeHashFunctions<long unsigned int, 256ul, WTF::IntHash<long unsigned int> >,WTF::HashTraits<WTF::ListHashSetNode<long unsigned int, 256ul>*>,WTF::HashTraits<WTF::ListHashSetNode<long unsigned int, 256ul>*> > { struct ListHashSetNode<long unsigned int,256ul> {} **x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_15_1_1; struct ListHashSetNode<long unsigned int,256ul> {} *x_15_1_2; struct ListHashSetNode<long unsigned int,256ul> {} *x_15_1_3; struct OwnPtr<WTF::ListHashSetNodeAllocator<long unsigned int, 256ul> > { struct ListHashSetNodeAllocator<long unsigned int,256ul> {} *x_4_2_1; } x_15_1_4; } x15; }*)arg1;
- (struct GraphicsLayer { int (**x1)(); struct GraphicsLayerClient {} *x2; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_2_1; } x_3_1_1; } x3; struct IntSize { int x_4_1_1; int x_4_1_2; } x4; struct FloatPoint { float x_5_1_1; float x_5_1_2; } x5; struct FloatPoint3D { float x_6_1_1; float x_6_1_2; float x_6_1_3; } x6; struct FloatSize { float x_7_1_1; float x_7_1_2; } x7; struct TransformationMatrix { double x_8_1_1[4][4]; } x8; struct TransformationMatrix { double x_9_1_1[4][4]; } x9; struct Color { unsigned int x_10_1_1; boolx_10_1_2; } x10; float x11; float x12; unsigned int x13 : 1; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; int x20; int x21; int x22; struct Vector<WebCore::GraphicsLayer*,0ul> { unsigned int x_23_1_1; struct VectorBuffer<WebCore::GraphicsLayer*,0ul> { struct GraphicsLayer {} **x_2_2_1; unsigned int x_2_2_2; } x_23_1_2; } x23; struct GraphicsLayer {} *x24; struct GraphicsLayer {} *x25; struct GraphicsLayer {} *x26; struct GraphicsLayer {} *x27; struct FloatPoint { float x_28_1_1; float x_28_1_2; } x28; struct IntRect { struct IntPoint { int x_1_2_1; int x_1_2_2; } x_29_1_1; struct IntSize { int x_2_2_1; int x_2_2_2; } x_29_1_2; } x29; int x30; }*)layerOwner;
- (void)setLayerOwner:(struct GraphicsLayer { int (**x1)(); struct GraphicsLayerClient {} *x2; struct String { struct RefPtr<WebCore::StringImpl> { struct StringImpl {} *x_1_2_1; } x_3_1_1; } x3; struct IntSize { int x_4_1_1; int x_4_1_2; } x4; struct FloatPoint { float x_5_1_1; float x_5_1_2; } x5; struct FloatPoint3D { float x_6_1_1; float x_6_1_2; float x_6_1_3; } x6; struct FloatSize { float x_7_1_1; float x_7_1_2; } x7; struct TransformationMatrix { double x_8_1_1[4][4]; } x8; struct TransformationMatrix { double x_9_1_1[4][4]; } x9; struct Color { unsigned int x_10_1_1; boolx_10_1_2; } x10; float x11; float x12; unsigned int x13 : 1; unsigned int x14 : 1; unsigned int x15 : 1; unsigned int x16 : 1; unsigned int x17 : 1; unsigned int x18 : 1; unsigned int x19 : 1; int x20; int x21; int x22; struct Vector<WebCore::GraphicsLayer*,0ul> { unsigned int x_23_1_1; struct VectorBuffer<WebCore::GraphicsLayer*,0ul> { struct GraphicsLayer {} **x_2_2_1; unsigned int x_2_2_2; } x_23_1_2; } x23; struct GraphicsLayer {} *x24; struct GraphicsLayer {} *x25; struct GraphicsLayer {} *x26; struct GraphicsLayer {} *x27; struct FloatPoint { float x_28_1_1; float x_28_1_2; } x28; struct IntRect { struct IntPoint { int x_1_2_1; int x_1_2_2; } x_29_1_1; struct IntSize { int x_2_2_1; int x_2_2_2; } x_29_1_2; } x29; int x30; }*)arg1;
- (void)display;

@end
