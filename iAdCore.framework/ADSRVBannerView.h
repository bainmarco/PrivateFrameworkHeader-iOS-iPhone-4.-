/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/iAdCore.framework/iAdCore
 */

@class ADAdSpecification, ADAdImage, ADBannerData, ADServerAccessCoordinator, ADBrandingFrame, ADBannerJSO, UIView, UIImageView, NSString, <AdSheetBannerViewDelegate>, NSSet;

@interface ADSRVBannerView : UIView  {
    <AdSheetBannerViewDelegate> *_delegate;
    ADServerAccessCoordinator *_serverAccessCoordinator;
    BOOL _privilegedClient;
    ADBannerData *_currentBanner;
    NSSet *_requiredContentSizeIdentifiers;
    NSString *_currentContentSizeIdentifier;
    NSString *_advertisingSection;
    NSString *_authenticationUserName;
    ADAdSpecification *_specification;
    ADBannerData *_nextBannerInfo;
    ADAdImage *_selectedImage;
    ADAdImage *_revealImage;
    struct CGSize { 
        float width; 
        float height; 
    } _orientedScreenSize;
    UIView *_adContainer;
    UIView *_nextContainer;
    UIView *_rotatingContainer;
    ADBrandingFrame *_bannerFrame;
    unsigned int _impressionSequence;
    unsigned int _overclickCount;
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    } _previousBounds;
    struct CGPoint { 
        float x; 
        float y; 
    } _clickPoint;
    BOOL _paused;
    double _startTime;
    double _currentBannerReferenceTime;
    double _currentBannerVisibleTime;
    int _idiom;
    BOOL _waitingForFirstLoadAttempt;
    BOOL _landingPageIsActive;
    BOOL _specificationUpdateNeeded;
    BOOL _needsToLogImpression;
    BOOL _shouldTransitionOnWebLoad;
    BOOL _shouldLoadBannerWhenServerStatusChanges;
    ADBannerData *_localAd;
    ADBannerJSO *_bannerJSO;
    BOOL _hostingInterstitialView;
    UIImageView *_interstitialDismissButton;
    UIImageView *_interstitialCornerImage;
    BOOL _contentVisible;
    BOOL _interstitialPresentedInView;
}

@property(getter=isBannerViewActionInProgress,readonly) BOOL bannerViewActionInProgress;
@property BOOL interstitialPresentedInView;
@property BOOL contentVisible;
@property(retain) UIImageView * interstitialCornerImage;
@property(retain) UIImageView * interstitialDismissButton;
@property BOOL hostingInterstitialView;
@property(retain) ADBannerJSO * bannerJSO;
@property(retain) ADBannerData * localAd;
@property BOOL shouldLoadBannerWhenServerStatusChanges;
@property BOOL shouldTransitionOnWebLoad;
@property BOOL needsToLogImpression;
@property BOOL specificationUpdateNeeded;
@property BOOL landingPageIsActive;
@property BOOL waitingForFirstLoadAttempt;
@property(readonly) int idiom;
@property double currentBannerVisibleTime;
@property double currentBannerReferenceTime;
@property double startTime;
@property BOOL paused;
@property(readonly) struct CGPoint { float x; float y; } clickPoint;
@property struct CGRect { struct CGPoint { float x; float y; } origin; struct CGSize { float width; float height; } size; } previousBounds;
@property(readonly) unsigned int overclickCount;
@property(readonly) unsigned int impressionSequence;
@property(retain) ADBrandingFrame * bannerFrame;
@property(retain) UIView * rotatingContainer;
@property(retain) UIView * nextContainer;
@property(retain) UIView * adContainer;
@property struct CGSize { float width; float height; } orientedScreenSize;
@property(retain,readonly) ADAdImage * revealImage;
@property(retain,readonly) ADAdImage * selectedImage;
@property(retain) ADBannerData * nextBannerInfo;
@property(retain) ADAdSpecification * specification;
@property(copy) NSString * authenticationUserName;
@property(copy) NSString * advertisingSection;
@property(copy) NSString * currentContentSizeIdentifier;
@property(copy) NSSet * requiredContentSizeIdentifiers;
@property(retain) ADBannerData * currentBanner;
@property(getter=isPrivilegedClient) BOOL privilegedClient;
@property(retain) ADServerAccessCoordinator * serverAccessCoordinator;
@property <AdSheetBannerViewDelegate> * delegate;

+ (id)bannerViewWithDefaultValues;

- (id)localAd;
- (id)currentBanner;
- (unsigned int)impressionSequence;
- (void)landingPageDidPresent;
- (void)landingPageDidDismiss;
- (struct CGPoint { float x1; float x2; })clickPoint;
- (void)interstitialViewRemovedFromSuperview;
- (id)bannerFrame;
- (id)advertisingSection;
- (BOOL)contentVisible;
- (id)specification;
- (id)adContainer;
- (id)rotatingContainer;
- (BOOL)paused;
- (int)idiom;
- (BOOL)needsToLogImpression;
- (BOOL)shouldLoadBannerWhenServerStatusChanges;
- (void)_updateSpecification;
- (void)_scheduleUpdateSpecification;
- (void)beginActionWithClick:(struct CGPoint { float x1; float x2; })arg1;
- (void)dispose;
- (void)setHostFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 orientation:(int)arg2;
- (void)interstitialTouchedDismissAreaWithControlEvent:(unsigned int)arg1;
- (void)setRequiredContentSizeIdentifiers:(id)arg1;
- (void)setCurrentContentSizeIdentifier:(id)arg1;
- (void)setCurrentBanner:(id)arg1;
- (void)setAdvertisingSection:(id)arg1;
- (BOOL)isBannerViewActionInProgress;
- (BOOL)_containerIsImageView;
- (BOOL)_containerIsWebView;
- (void)_resetTimeMarkers;
- (void)_loadBannerNow;
- (void)_contentDidAppear;
- (void)_contentDidDisappear;
- (void)processCurrentVisibility:(BOOL)arg1;
- (void)_retryLoading:(id)arg1;
- (void)serverAccessCoordinatorAllowsRequestsNotification:(id)arg1;
- (void)_logImpression;
- (void)_trackClick;
- (void)transitionToNextBanner:(BOOL)arg1 isRotating:(BOOL)arg2;
- (id)viewForBanner:(id)arg1 bannerIsImage:(BOOL*)arg2;
- (void)deferredOrientationEventForWebView;
- (void)updateHTML5ContainerOrientation:(id)arg1;
- (void)cacheLoadedBannerData:(id)arg1;
- (void)setLocalAd:(id)arg1;
- (void)_handleError:(id)arg1;
- (id)transferWebViewForTransition;
- (BOOL)interstitialPresentedInView;
- (void)setInterstitialPresentedInView:(BOOL)arg1;
- (id)interstitialCornerImage;
- (void)setInterstitialCornerImage:(id)arg1;
- (id)interstitialDismissButton;
- (void)setInterstitialDismissButton:(id)arg1;
- (BOOL)hostingInterstitialView;
- (void)setHostingInterstitialView:(BOOL)arg1;
- (id)bannerJSO;
- (void)setBannerJSO:(id)arg1;
- (void)setShouldLoadBannerWhenServerStatusChanges:(BOOL)arg1;
- (BOOL)shouldTransitionOnWebLoad;
- (void)setShouldTransitionOnWebLoad:(BOOL)arg1;
- (void)setNeedsToLogImpression:(BOOL)arg1;
- (BOOL)specificationUpdateNeeded;
- (void)setSpecificationUpdateNeeded:(BOOL)arg1;
- (BOOL)landingPageIsActive;
- (void)setLandingPageIsActive:(BOOL)arg1;
- (BOOL)waitingForFirstLoadAttempt;
- (void)setWaitingForFirstLoadAttempt:(BOOL)arg1;
- (double)currentBannerVisibleTime;
- (void)setCurrentBannerVisibleTime:(double)arg1;
- (double)currentBannerReferenceTime;
- (void)setCurrentBannerReferenceTime:(double)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })previousBounds;
- (void)setPreviousBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setBannerFrame:(id)arg1;
- (void)setRotatingContainer:(id)arg1;
- (id)nextContainer;
- (void)setNextContainer:(id)arg1;
- (void)setAdContainer:(id)arg1;
- (struct CGSize { float x1; float x2; })orientedScreenSize;
- (void)setOrientedScreenSize:(struct CGSize { float x1; float x2; })arg1;
- (id)revealImage;
- (id)nextBannerInfo;
- (void)setNextBannerInfo:(id)arg1;
- (void)setSpecification:(id)arg1;
- (id)currentContentSizeIdentifier;
- (id)requiredContentSizeIdentifiers;
- (void)cacheFailedToLoadBanner:(id)arg1 withError:(id)arg2;
- (id)serverAccessCoordinator;
- (void)setAuthenticationUserName:(id)arg1;
- (void)setServerAccessCoordinator:(id)arg1;
- (void)loadNewBannerWebView;
- (unsigned int)overclickCount;
- (id)authenticationUserName;
- (BOOL)isPrivilegedClient;
- (void)setPrivilegedClient:(BOOL)arg1;
- (double)startTime;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)uiWebView:(id)arg1 didClearWindowObject:(id)arg2 forFrame:(id)arg3;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)uiWebView:(id)arg1 resource:(id)arg2 didReceiveAuthenticationChallenge:(id)arg3 fromDataSource:(id)arg4;
- (void)setPaused:(BOOL)arg1;
- (id)selectedImage;
- (void)layoutSubviews;
- (struct CGSize { float x1; float x2; })sizeThatFits:(struct CGSize { float x1; float x2; })arg1;
- (void)dealloc;
- (void)setStartTime:(double)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setContentVisible:(BOOL)arg1;

@end
