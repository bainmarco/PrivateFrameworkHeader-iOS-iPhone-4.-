/* Generated by RuntimeBrowser.
   Image: /System/Library/PrivateFrameworks/GameKitServices.framework/GameKitServices
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class CDXClient, NSString, NSData, NSMutableArray, NSMutableDictionary;

@interface GKConnectionInternal : GKConnection <CDXClientDelegate, CDXClientSessionDelegate> {
    unsigned int _gckPID;
    NSString *_pidGUID;
    struct OpaqueGCKSession { } *_gckSession;
    NSMutableArray *_gckEventList;
    BOOL _toForwardEVents;
    id _eventDelegate;
    CDXClient *_cdxClient;
    NSMutableDictionary *_cdxSessions;
    NSData *_preblob;

  /* Unexpected information at end of encoded ivar type: ? */
  /* Error parsing encoded ivar type info: @? */
    id _preblobCallback;

    double _preblobCallbackCancelTime;
    struct _opaque_pthread_mutex_t { 
        long __sig; 
        BOOL __opaque[40]; 
    } _xPreblobFetch;
    struct _opaque_pthread_cond_t { 
        long __sig; 
        BOOL __opaque[24]; 
    } _cPreblobFetch;
    struct _opaque_pthread_mutex_t { 
        long __sig; 
        BOOL __opaque[40]; 
    } _xPrepareThread;
    struct _opaque_pthread_cond_t { 
        long __sig; 
        BOOL __opaque[24]; 
    } _cPrepareThread;
    int _fPrepareThread;
    double _wakeTime;
    NSMutableDictionary *_preblobToPIDMap;
    NSMutableDictionary *_pidToPreblobMap;
    NSMutableDictionary *_pidToConnectionDataMap;
    NSMutableArray *_pendingConnectionPIDList;
    BOOL _fAllowMoreRelay;
    NSMutableArray *_allowRelayPIDList;
    NSMutableDictionary *_pidToPlayerIDMap;
    NSMutableDictionary *_pidToConnectTimeoutSource;
    struct _opaque_pthread_mutex_t { 
        long __sig; 
        BOOL __opaque[40]; 
    } _xRelay;
    NSMutableDictionary *_pidToRelayInitiateInfoMap;
    NSMutableDictionary *_pidToRelayConnectionDataMap;
    NSMutableDictionary *_pidToRelayUpdateInfoMap;
    NSMutableDictionary *_initRelayQueue;
    NSMutableDictionary *_updateRelayQueue;
    int _fPreReleased;
}

@property(retain) NSMutableDictionary * cdxSessions;
@property(retain) CDXClient * cdxClient;
@property(retain) NSMutableDictionary * pidToConnectTimeoutSource;


- (void)CDXClientSession:(id)arg1 receivedData:(id)arg2 from:(int)arg3;
- (id)cdxClient;
- (id)cdxSessions;
- (id)initWithParticipantID:(id)arg1;
- (void)preRelease;
- (struct dispatch_queue_s { }*)timerQueue;
- (struct dispatch_queue_s { }*)asyncWorkQueue;
- (void)getLocalConnectionDataWithCompletionHandler:(id)arg1;
- (void)connectPendingConnectionsFromList:(id)arg1 sessionInfo:(id)arg2;
- (BOOL)shouldWeInitiateRelayWithPID:(unsigned int)arg1;
- (void)connectParticipantsWithConnectionData:(id)arg1 withSessionInfo:(id)arg2;
- (void)internal_setRemoteConnectionData:(id)arg1 fromParticipantID:(id)arg2 pendingConnectionPIDList:(id)arg3;
- (void)addEvent:(struct { int x1; char *x2; int x3; unsigned int x4; }*)arg1 remotePeer:(unsigned int)arg2;
- (id)eventDelegate;
- (void)setCdxClient:(id)arg1;
- (id)createInsecureTicketUsingSortedConnectionsFromList:(id)arg1;
- (void)CDXClient:(id)arg1 error:(id)arg2;
- (void)CDXClient:(id)arg1 preblob:(id)arg2;
- (id)extractBlobUsingData:(id)arg1 withSourcePID:(unsigned int)arg2 destPID:(unsigned int)arg3;
- (BOOL)convertParticipantID:(id)arg1 toPeerID:(id*)arg2;
- (BOOL)convertPeerID:(id)arg1 toParticipantID:(id*)arg2;
- (id)createInitiateRelayDictionaryForParticipant:(id)arg1 remotePeerID:(id)arg2;
- (id)createRelayUpdateDictionaryForParticipant:(id)arg1 didInitiate:(BOOL)arg2;
- (void)doRelayCheckForRemotePeerID:(id)arg1;
- (void)internalInitiateRelayWithParticipant:(id)arg1 withConnectionData:(id)arg2 withRelayInfo:(id)arg3 didInitiate:(BOOL)arg4;
- (void)initiateRelayWithParticipant:(id)arg1 withConnectionData:(id)arg2 withRelayInfo:(id)arg3 didInitiate:(BOOL)arg4;
- (void)internalUpdateRelayWithParticipant:(id)arg1 withConnectionData:(id)arg2 withRelayInfo:(id)arg3 didInitiate:(BOOL)arg4;
- (void)updateRelayWithParticipant:(id)arg1 withConnectionData:(id)arg2 withRelayInfo:(id)arg3 didInitiate:(BOOL)arg4;
- (void)cancelConnectParticipant:(id)arg1;
- (void)setCdxSessions:(id)arg1;
- (id)pidToConnectTimeoutSource;
- (void)setPidToConnectTimeoutSource:(id)arg1;
- (void)setParticipantID:(id)arg1 forPeerID:(id)arg2;
- (unsigned int)gckPID;
- (struct OpaqueGCKSession { }*)gckSession;
- (void)setEventDelegate:(id)arg1;
- (void)dealloc;

@end
